create table dept (dno int primary key, dname varchar (20),mgrSSN int,mgrstartdate date);


CREATE TABLE employee (
    SSN int primary key,
    name varchar (20),
    address varchar (20),
    sex char,
    salary float,
    superSSN varchar (20),
    dno int,
    FOREIGN KEY (dno) REFERENCES dept(dno) ON DELETE CASCADE);
    
    
create table dlocation( dno int primary key, dloc varchar (20), foreign key (dno) references dept(dno) on delete cascade);


create table project (pno int primary key,pname varchar (20),ploc varchar (20),dno int, foreign key (dno) references dept(dno) on delete cascade);


CREATE TABLE workson (SSN int,pno int, hours int, FOREIGN KEY (pno) REFERENCES project(pno) ON DELETE CASCADE,FOREIGN KEY (SSN) REFERENCES employee (SSN) ON DELETE CASCADE);



INSERT INTO dept VALUES (1, 'Engineering', 123456789, '01-JAN-2023');
INSERT INTO dept VALUES (2, 'Marketing', 234567890, '15-FEB-2023');
INSERT INTO dept VALUES (3, 'Finance', 345678901,'20-MAR-2023');
INSERT INTO dept VALUES (4, 'Human Resources', 456789012, '10-APR-2023');
INSERT INTO dept VALUES (5, 'Research', 567890123,'05-MAY-2023');
INSERT INTO dept VALUES (6, 'Finance', 345676801,'20-MAR-2023');
INSERT INTO dept VALUES (7, 'Finance', 345678901,'20-MAR-2023');
INSERT INTO dept VALUES (8, 'Finance', 345679901,'20-MAR-2023');
INSERT INTO dept VALUES (9, 'Finance', 345676901,'20-MAR-2023');
INSERT INTO dept VALUES (10, 'Finance', 345677901,'20-MAR-2023');
truncate table dept;

INSERT INTO employee VALUES (101, 'John Doe', '123 Main St', 'M', 600000.00, 60, 1);
INSERT INTO employee VALUES (201,'Michael Johnson', '124 Main St', 'M', 700000.00, 61, 2);
INSERT INTO employee VALUES (301,'Jessica White', '125 Main St', 'F', 800000.00, 62, 3);
INSERT INTO employee VALUES (401, 'William Clark', '126 Main St', 'M', 100000.00, 63, 4);
INSERT INTO employee VALUES (501, 'Olivia Hall', '127 Main St', 'F', 300000.00, 65, 5);
INSERT INTO employee VALUES (601,'Amber', '125 Main St', 'F', 700000.00, 66, 6);
INSERT INTO employee VALUES (701,'Skyler', '125 Main St', 'F', 900000.00, 67, 7);
INSERT INTO employee VALUES (801,'Walter White', '125 Main St', 'F', 800000.00, 68, 8);
INSERT INTO employee VALUES (901,'Butcher', '125 Main St', 'F', 610000.00, 69, 9);
INSERT INTO employee VALUES (1001,'Homelander', '125 Main St', 'F', 710000.00, 70, 10);
select * from employee


INSERT INTO dlocation VALUES (1, 'New York');
INSERT INTO dlocation VALUES (2, 'Los Angeles');
INSERT INTO dlocation VALUES (3, 'Chicago');
INSERT INTO dlocation VALUES (4, 'Houston');
INSERT INTO dlocation VALUES (5, 'San Francisco');


INSERT INTO project VALUES (1, 'Project A', 'New York', 1);
INSERT INTO project VALUES (2, 'Project B', 'Los Angeles', 2);
INSERT INTO project VALUES (3, 'Project C', 'Chicago', 3);
INSERT INTO project VALUES (4, 'Project D', 'Houston', 4);
INSERT INTO project VALUES (5, 'Project E', 'San Francisco', 5);


INSERT INTO workson values(101,1,10);
INSERT INTO workson values(201,2,12);
INSERT INTO workson values(301,3,15);
INSERT INTO workson values(401,4,18);




SELECT DISTINCT P.pno
FROM project P, dept D, employee E
WHERE P.dno = D.dno
  AND E.name = 'John Doe'
  AND P.dno = E.dno
UNION
SELECT DISTINCT P.pno
FROM project P, workson W, employee E
WHERE P.pno = W.pno
  AND W.SSN = E.SSN
  AND E.name = 'John Doe';



select E.name,1.1*E.salary as hike_salary
from project P,workson W,employee E
where P.pno=W.pno and W.SSN=E.SSN and P.pname='Project C';



SELECT 
    SUM(E.salary) AS sum_sal,
    MAX(E.salary) AS max_sal,
    MIN(E.salary) AS min_sal,
    AVG(E.salary) AS avg_sal
FROM 
    employee E, dept D
WHERE 
    E.dno = D.dno
    AND D.dname = 'Finance';



SELECT E.name
FROM employee E
WHERE NOT EXISTS (
    (SELECT P.pno FROM project P WHERE P.dno = 5)
    MINUS
    (SELECT W.pno FROM workson W WHERE E.SSN = W.SSN));



SELECT dno, COUNT(*) AS no_of_emp 
FROM employee 
WHERE salary > 60000
  AND dno IN (SELECT dno 
              FROM employee 
              GROUP BY dno 
              HAVING COUNT(*) > 0)
GROUP BY dno;

 

1) Make a list of all project numbers for projects that involve an employee
whose last name is ‘Hegde’, either as a worker or as a manager of the
department that controls the project.
2) Show the resulting salaries if every employee working on the ‘AI’ project is
given a 10 percent raise.
3) Find the sum of the salaries of all employees of the ‘Accounts’ department, as
well as the maximum salary, the minimum salary, and the average salary in
this department.
4) Retrieve the name of each employee who works on all the projects controlled
by department number 5 (use NOT EXISTS operator).
5) For each department that has more than five employees, retrieve the
department number and the number of its employees who are earning more
than Rs.6,00,000 per month.